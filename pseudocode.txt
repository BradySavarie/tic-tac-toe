Tic Tac mother fucking Toe bitches lets go

Main Components:
    Player Factory Function
    gameBoard Module
    gameController Module
    displayController Module

Im going to start by creating a gameboard module. Inside of the module an empty 2D array called board will be initialized along with variables representing the number of rows and columns on the board. A nested for loop will run immediately, with the outer loop representing rows and the inner loop representing columns, that calls a function to populate each index of the board array with cell objects. 

-----------------------------------------

*** I need to decide how cell objects will function ***

The purpose of the cell objects are to store and update marker information within each cell of the gameboard. 

I could have the cell object reside in the gameBoard module as a private object. I can create public methods that manipulate the cell objects within the gameBoard module via the private object.

Marker values:
    0 - Represents an empty cell
    1 - PlayerX has inserted a marker
    2 - PlayerO has inserted a marker

cell{} methods will include getMarker that returns the value of it's marker variable, and placeMarker that updates the value of it's marker variable to the players marker value when called (will be called when corresponding cell is clicked).

gameBoard Module --> cell inner-module(?) --> 

const cell = () => {
    let marker = 0;

    // insert methods here
    const getMarker = () => marker;

    return { getMarker, etc, }
}

-----------------------------------------

Next I will create a factory function called playerFactory that accepts the the parameters name and marker. 

I want the user to be able to choose which letter they are playing (X or O) and input a name. Whichever player chooses X will always start the first game, however each time the play again button is clicked the starting player will alternate. 